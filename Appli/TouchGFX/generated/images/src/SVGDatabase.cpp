// Generated by imageconverter. Please, do not edit!

#include <images/SVGDatabase.hpp>

using namespace touchgfx;

static const uint8_t svg_base_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_base_shape_0_points[] = {
    0.0000f, 0.0000f, 480.0000f, 272.0000f, 0.0000f,
};

#ifdef SIMULATOR
// Linear gradient
// Stops:
// 0 @ 0 = ff085041
// 1 @ 80 = ff000000
// 2 @ 770 = ff000000
// 3 @ 1023 = ff0b261f
static const uint32_t linear_gradient_base_linear_gradient_palette[] = {
    0xff085041, 0xff084f40, 0xff084e3f, 0xff084d3f, 0xff084c3e, 0xff084b3d, 0xff074a3c, 0xff07493b,
    0xff07483b, 0xff07473a, 0xff074639, 0xff074538, 0xff074437, 0xff074336, 0xff074236, 0xff074135,
    0xff064034, 0xff063f33, 0xff063e32, 0xff063d32, 0xff063c31, 0xff063b30, 0xff063a2f, 0xff06392e,
    0xff06382e, 0xff06372d, 0xff05362c, 0xff05352b, 0xff05342a, 0xff053329, 0xff053229, 0xff053128,
    0xff053027, 0xff052f26, 0xff052e25, 0xff052d25, 0xff042c24, 0xff042b23, 0xff042a22, 0xff042921,
    0xff042821, 0xff042720, 0xff04261f, 0xff04251e, 0xff04241d, 0xff04231c, 0xff03221c, 0xff03211b,
    0xff03201a, 0xff031f19, 0xff031e18, 0xff031d18, 0xff031c17, 0xff031b16, 0xff031a15, 0xff031914,
    0xff021814, 0xff021713, 0xff021612, 0xff021511, 0xff021410, 0xff02130f, 0xff02120f, 0xff02110e,
    0xff02100d, 0xff020f0c, 0xff010e0b, 0xff010d0b, 0xff010c0a, 0xff010b09, 0xff010a08, 0xff010907,
    0xff010807, 0xff010706, 0xff010605, 0xff010504, 0xff000403, 0xff000302, 0xff000202, 0xff000101,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000100, 0xff000101,
    0xff000101, 0xff000101, 0xff000101, 0xff000101, 0xff000201, 0xff000201, 0xff010201, 0xff010202,
    0xff010202, 0xff010202, 0xff010202, 0xff010302, 0xff010302, 0xff010302, 0xff010302, 0xff010303,
    0xff010303, 0xff010303, 0xff010403, 0xff010403, 0xff010403, 0xff010403, 0xff010403, 0xff010404,
    0xff010504, 0xff010504, 0xff010504, 0xff010504, 0xff010504, 0xff020504, 0xff020504, 0xff020605,
    0xff020605, 0xff020605, 0xff020605, 0xff020605, 0xff020605, 0xff020605, 0xff020705, 0xff020706,
    0xff020706, 0xff020706, 0xff020706, 0xff020706, 0xff020806, 0xff020806, 0xff020806, 0xff020806,
    0xff020807, 0xff020807, 0xff020807, 0xff020907, 0xff030907, 0xff030907, 0xff030907, 0xff030907,
    0xff030908, 0xff030908, 0xff030a08, 0xff030a08, 0xff030a08, 0xff030a08, 0xff030a08, 0xff030a08,
    0xff030b09, 0xff030b09, 0xff030b09, 0xff030b09, 0xff030b09, 0xff030b09, 0xff030b09, 0xff030c09,
    0xff030c0a, 0xff030c0a, 0xff030c0a, 0xff040c0a, 0xff040c0a, 0xff040c0a, 0xff040d0a, 0xff040d0a,
    0xff040d0b, 0xff040d0b, 0xff040d0b, 0xff040d0b, 0xff040e0b, 0xff040e0b, 0xff040e0b, 0xff040e0b,
    0xff040e0c, 0xff040e0c, 0xff040e0c, 0xff040f0c, 0xff040f0c, 0xff040f0c, 0xff040f0c, 0xff040f0c,
    0xff040f0c, 0xff040f0d, 0xff05100d, 0xff05100d, 0xff05100d, 0xff05100d, 0xff05100d, 0xff05100d,
    0xff05110d, 0xff05110e, 0xff05110e, 0xff05110e, 0xff05110e, 0xff05110e, 0xff05110e, 0xff05120e,
    0xff05120e, 0xff05120f, 0xff05120f, 0xff05120f, 0xff05120f, 0xff05120f, 0xff05130f, 0xff05130f,
    0xff05130f, 0xff061310, 0xff061310, 0xff061310, 0xff061410, 0xff061410, 0xff061410, 0xff061410,
    0xff061410, 0xff061411, 0xff061411, 0xff061511, 0xff061511, 0xff061511, 0xff061511, 0xff061511,
    0xff061511, 0xff061512, 0xff061612, 0xff061612, 0xff061612, 0xff061612, 0xff061612, 0xff061612,
    0xff071712, 0xff071713, 0xff071713, 0xff071713, 0xff071713, 0xff071713, 0xff071713, 0xff071813,
    0xff071813, 0xff071813, 0xff071814, 0xff071814, 0xff071814, 0xff071814, 0xff071914, 0xff071914,
    0xff071914, 0xff071914, 0xff071915, 0xff071915, 0xff071a15, 0xff071a15, 0xff071a15, 0xff081a15,
    0xff081a15, 0xff081a15, 0xff081a16, 0xff081b16, 0xff081b16, 0xff081b16, 0xff081b16, 0xff081b16,
    0xff081b16, 0xff081b16, 0xff081c17, 0xff081c17, 0xff081c17, 0xff081c17, 0xff081c17, 0xff081c17,
    0xff081d17, 0xff081d17, 0xff081d18, 0xff081d18, 0xff081d18, 0xff081d18, 0xff091d18, 0xff091e18,
    0xff091e18, 0xff091e18, 0xff091e19, 0xff091e19, 0xff091e19, 0xff091e19, 0xff091f19, 0xff091f19,
    0xff091f19, 0xff091f19, 0xff091f19, 0xff091f1a, 0xff09201a, 0xff09201a, 0xff09201a, 0xff09201a,
    0xff09201a, 0xff09201a, 0xff09201a, 0xff09211b, 0xff09211b, 0xff0a211b, 0xff0a211b, 0xff0a211b,
    0xff0a211b, 0xff0a211b, 0xff0a221b, 0xff0a221c, 0xff0a221c, 0xff0a221c, 0xff0a221c, 0xff0a221c,
    0xff0a231c, 0xff0a231c, 0xff0a231c, 0xff0a231d, 0xff0a231d, 0xff0a231d, 0xff0a231d, 0xff0a241d,
    0xff0a241d, 0xff0a241d, 0xff0a241d, 0xff0a241e, 0xff0b241e, 0xff0b241e, 0xff0b251e, 0xff0b251e,
    0xff0b251e, 0xff0b251e, 0xff0b251e, 0xff0b251f, 0xff0b261f, 0xff0b261f, 0xff0b261f, 0xff0b261f
};
#endif // SIMULATOR

const float linear_gradient_base_linear_gradient_stop_positions[] = {
    0.0000f, 0.0790f, 0.7530f, 1.0000f
};

const uint32_t linear_gradient_base_linear_gradient_stop_colors[] = {
    0xff085041, 0xff000000, 0xff000000, 0xff0b261f
};

static const VGLinearGradient svg_base_shape_0_fill = {
#ifdef SIMULATOR
    linear_gradient_base_linear_gradient_palette,
#else
    0, // Palette
#endif
    4, // Number of stops
    linear_gradient_base_linear_gradient_stop_positions,
    linear_gradient_base_linear_gradient_stop_colors,
    240.0000f, 0.0000f, 240.0000f, 272.0000f, // Start and end point
    true // Is solid
};

static const VGShape svg_base_shape_0 = {
    5, 5,                                                     // numCommands, numPoints
    svg_base_shape_0_commands,                                // commands
    svg_base_shape_0_points,                                  // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_LINEAR_GRADIENT,                                       // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_base_shape_0_fill,                                   // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 0.0000f, 0.0000f, 480.0000f, 272.0000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_diagnostic_icon_shape_1_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_diagnostic_icon_shape_1_points[] = {
    23.9560f, 340.7870f, 23.5493f, 340.7873f, 23.1544f, 340.6506f, 22.8350f, 340.3990f, 15.9650f, 334.9840f, 15.5913f, 334.6908f, 15.3504f, 334.2602f, 15.2961f, 333.7883f,
    15.2418f, 333.3164f, 15.3786f, 332.8424f, 15.6760f, 332.4720f, 16.2993f, 331.6980f, 17.4294f, 331.5700f, 18.2100f, 332.1850f, 23.8180f, 336.6060f, 33.2370f, 327.2450f,
    33.9438f, 326.5473f, 35.0802f, 326.5473f, 35.7870f, 327.2450f, 36.1247f, 327.5791f, 36.3146f, 328.0345f, 36.3146f, 328.5095f, 36.3146f, 328.9845f, 36.1247f, 329.4398f, 35.7870f, 329.7740f, 25.2300f, 340.2640f,
    24.8906f, 340.6009f, 24.4313f, 340.7894f, 23.9530f, 340.7880f
};

static const VGFixedColor svg_diagnostic_icon_shape_1_fill = {
    0xffb6ccc1 // ARGB
};

static const VGShape svg_diagnostic_icon_shape_1 = {
    13, 58,                                                       // numCommands, numPoints
    svg_diagnostic_icon_shape_1_commands,                         // commands
    svg_diagnostic_icon_shape_1_points,                           // points
    VG_FILL_NON_ZERO,                                             // drawingMode
    VG_FIXED_COLOR,                                               // fillMode
    VG_NONE,                                                      // strokeMode
    &svg_diagnostic_icon_shape_1_fill,                            // fillPaint
    0,                                                            // strokePaint
    0.0000f,                                                      // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                     // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                       // strokeLineCap
    4.0000,                                                       // strokeMiterLimit
    255,                                                          // fillAlpha
    255,                                                          // strokeAlpha
    { 15.2845f, 326.7217f, 36.3146f, 340.7880f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, -8.2130f, -323.0440f }, // transformation[6]
    0                                                             // next
};

static const uint8_t svg_diagnostic_icon_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_diagnostic_icon_shape_0_points[] = {
    35.1630f, 319.1940f, 1.4570f, 1.2850f, 319.1940f, 1.1201f, 319.2626f, 0.9988f, 319.3846f, 0.8775f, 319.5066f, 0.8099f, 319.6720f, 0.8110f, 319.8440f,
    0.8110f, 344.4000f, 0.8102f, 344.5720f, 0.8778f, 344.7373f, 0.9990f, 344.8594f, 1.1202f, 344.9815f, 1.2850f, 345.0505f, 1.4570f, 345.0510f, 13.7380f,
    349.6840f, 11.5320f, 351.1890f, 25.0880f,
    349.6840f, 22.8880f, 345.0510f, 35.1630f,
    35.5214f, 345.0493f, 35.8110f, 344.7584f, 35.8110f, 344.4000f, 319.8400f, 35.8116f, 319.4816f, 35.5214f, 319.1906f, 35.1630f, 319.1900f,
    33.8850f, 340.1720f, 2.7360f, 321.4720f, 33.8860f,
};

static const VGFixedColor svg_diagnostic_icon_shape_0_fill = {
    0xffb6ccc1 // ARGB
};

static const VGShape svg_diagnostic_icon_shape_0 = {
    24, 56,                                                       // numCommands, numPoints
    svg_diagnostic_icon_shape_0_commands,                         // commands
    svg_diagnostic_icon_shape_0_points,                           // points
    VG_FILL_NON_ZERO,                                             // drawingMode
    VG_FIXED_COLOR,                                               // fillMode
    VG_NONE,                                                      // strokeMode
    &svg_diagnostic_icon_shape_0_fill,                            // fillPaint
    0,                                                            // strokePaint
    0.0000f,                                                      // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                     // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                       // strokeLineCap
    4.0000,                                                       // strokeMiterLimit
    255,                                                          // fillAlpha
    255,                                                          // strokeAlpha
    { 0.8110f, 319.1900f, 35.8110f, 351.1890f },                  // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, -0.8110f, -319.1940f }, // transformation[6]
    &svg_diagnostic_icon_shape_1                                  // next
};

static const uint8_t svg_group_93_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_group_93_shape_0_points[] = {
    3.0000f, 0.5000f, 56.0000f, 57.3807f, 0.5000f, 58.5000f, 1.6193f, 58.5000f, 3.0000f, 50.0000f,
    58.5000f, 51.3807f, 57.3807f, 52.5000f, 56.0000f, 52.5000f, 3.0000f, 1.6193f, 52.5000f, 0.5000f, 51.3807f, 0.5000f, 50.0000f, 3.0000f,
    0.5000f, 1.6193f, 1.6193f, 0.5000f, 3.0000f, 0.5000f,
};

static const VGFixedColor svg_group_93_shape_0_stroke = {
    0xff707070 // ARGB
};

static const VGShape svg_group_93_shape_0 = {
    10, 30,                                                   // numCommands, numPoints
    svg_group_93_shape_0_commands,                            // commands
    svg_group_93_shape_0_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_NONE,                                                  // fillMode
    VG_FIXED_COLOR,                                           // strokeMode
    0,                                                        // fillPaint
    &svg_group_93_shape_0_stroke,                             // strokePaint
    1.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 0.5000f, 0.5000f, 58.5000f, 52.5000f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_left_upper_wing_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_left_upper_wing_shape_0_points[] = {
    272.0000f, 28.2860f, 0.0000f, 26.2860f, 272.0000f,
};

#ifdef SIMULATOR
// Linear gradient
// Stops:
// 0 @ 0 = ff093e1c
// 1 @ 521 = ff00ffa7
// 2 @ 1023 = ff093e1c
static const uint32_t linear_gradient_left_upper_wing_linear_gradient_palette[] = {
    0xff093e1c, 0xff093e1c, 0xff093f1d, 0xff093f1d, 0xff093f1d, 0xff09401d, 0xff09401e, 0xff09411e,
    0xff09411e, 0xff09411e, 0xff09421f, 0xff09421f, 0xff09421f, 0xff09431f, 0xff094320, 0xff094420,
    0xff094420, 0xff094421, 0xff094521, 0xff094521, 0xff094521, 0xff094622, 0xff094622, 0xff094722,
    0xff094722, 0xff094723, 0xff094823, 0xff094823, 0xff094823, 0xff084924, 0xff084924, 0xff084924,
    0xff084a25, 0xff084a25, 0xff084b25, 0xff084b25, 0xff084b26, 0xff084c26, 0xff084c26, 0xff084c26,
    0xff084d27, 0xff084d27, 0xff084e27, 0xff084e27, 0xff084e28, 0xff084f28, 0xff084f28, 0xff084f29,
    0xff085029, 0xff085029, 0xff085129, 0xff08512a, 0xff08512a, 0xff08522a, 0xff08522a, 0xff08522b,
    0xff08532b, 0xff08532b, 0xff08532b, 0xff08542c, 0xff08542c, 0xff08552c, 0xff08552d, 0xff08552d,
    0xff08562d, 0xff08562d, 0xff08562e, 0xff08572e, 0xff08572e, 0xff08582e, 0xff08582f, 0xff08582f,
    0xff08592f, 0xff08592f, 0xff085930, 0xff085a30, 0xff085a30, 0xff085b31, 0xff085b31, 0xff085b31,
    0xff085c31, 0xff085c32, 0xff085c32, 0xff085d32, 0xff085d32, 0xff085d33, 0xff085e33, 0xff075e33,
    0xff075f33, 0xff075f34, 0xff075f34, 0xff076034, 0xff076035, 0xff076035, 0xff076135, 0xff076135,
    0xff076236, 0xff076236, 0xff076236, 0xff076336, 0xff076337, 0xff076337, 0xff076437, 0xff076437,
    0xff076538, 0xff076538, 0xff076538, 0xff076639, 0xff076639, 0xff076639, 0xff076739, 0xff07673a,
    0xff07673a, 0xff07683a, 0xff07683a, 0xff07693b, 0xff07693b, 0xff07693b, 0xff076a3b, 0xff076a3c,
    0xff076a3c, 0xff076b3c, 0xff076b3d, 0xff076c3d, 0xff076c3d, 0xff076c3d, 0xff076d3e, 0xff076d3e,
    0xff076d3e, 0xff076e3e, 0xff076e3f, 0xff076f3f, 0xff076f3f, 0xff076f3f, 0xff077040, 0xff077040,
    0xff077040, 0xff077141, 0xff077141, 0xff077141, 0xff077241, 0xff077242, 0xff077342, 0xff077342,
    0xff077342, 0xff067443, 0xff067443, 0xff067443, 0xff067543, 0xff067544, 0xff067644, 0xff067644,
    0xff067645, 0xff067745, 0xff067745, 0xff067745, 0xff067846, 0xff067846, 0xff067946, 0xff067946,
    0xff067947, 0xff067a47, 0xff067a47, 0xff067a47, 0xff067b48, 0xff067b48, 0xff067b48, 0xff067c49,
    0xff067c49, 0xff067d49, 0xff067d49, 0xff067d4a, 0xff067e4a, 0xff067e4a, 0xff067e4a, 0xff067f4b,
    0xff067f4b, 0xff06804b, 0xff06804b, 0xff06804c, 0xff06814c, 0xff06814c, 0xff06814d, 0xff06824d,
    0xff06824d, 0xff06834d, 0xff06834e, 0xff06834e, 0xff06844e, 0xff06844e, 0xff06844f, 0xff06854f,
    0xff06854f, 0xff06854f, 0xff068650, 0xff068650, 0xff068750, 0xff068751, 0xff068751, 0xff068851,
    0xff068851, 0xff068852, 0xff068952, 0xff058952, 0xff058a52, 0xff058a53, 0xff058a53, 0xff058b53,
    0xff058b53, 0xff058b54, 0xff058c54, 0xff058c54, 0xff058d55, 0xff058d55, 0xff058d55, 0xff058e55,
    0xff058e56, 0xff058e56, 0xff058f56, 0xff058f56, 0xff058f57, 0xff059057, 0xff059057, 0xff059157,
    0xff059158, 0xff059158, 0xff059258, 0xff059259, 0xff059259, 0xff059359, 0xff059359, 0xff05945a,
    0xff05945a, 0xff05945a, 0xff05955a, 0xff05955b, 0xff05955b, 0xff05965b, 0xff05965b, 0xff05975c,
    0xff05975c, 0xff05975c, 0xff05985d, 0xff05985d, 0xff05985d, 0xff05995d, 0xff05995e, 0xff05995e,
    0xff059a5e, 0xff059a5e, 0xff059b5f, 0xff059b5f, 0xff059b5f, 0xff059c5f, 0xff059c60, 0xff059c60,
    0xff059d60, 0xff059d61, 0xff059e61, 0xff059e61, 0xff059e61, 0xff049f62, 0xff049f62, 0xff049f62,
    0xff04a062, 0xff04a063, 0xff04a163, 0xff04a163, 0xff04a164, 0xff04a264, 0xff04a264, 0xff04a264,
    0xff04a365, 0xff04a365, 0xff04a465, 0xff04a465, 0xff04a466, 0xff04a566, 0xff04a566, 0xff04a566,
    0xff04a667, 0xff04a667, 0xff04a667, 0xff04a768, 0xff04a768, 0xff04a868, 0xff04a868, 0xff04a869,
    0xff04a969, 0xff04a969, 0xff04a969, 0xff04aa6a, 0xff04aa6a, 0xff04ab6a, 0xff04ab6a, 0xff04ab6b,
    0xff04ac6b, 0xff04ac6b, 0xff04ac6c, 0xff04ad6c, 0xff04ad6c, 0xff04ae6c, 0xff04ae6d, 0xff04ae6d,
    0xff04af6d, 0xff04af6d, 0xff04af6e, 0xff04b06e, 0xff04b06e, 0xff04b06e, 0xff04b16f, 0xff04b16f,
    0xff04b26f, 0xff04b270, 0xff04b270, 0xff04b370, 0xff04b370, 0xff04b371, 0xff04b471, 0xff03b471,
    0xff03b571, 0xff03b572, 0xff03b572, 0xff03b672, 0xff03b672, 0xff03b673, 0xff03b773, 0xff03b773,
    0xff03b874, 0xff03b874, 0xff03b874, 0xff03b974, 0xff03b975, 0xff03b975, 0xff03ba75, 0xff03ba75,
    0xff03ba76, 0xff03bb76, 0xff03bb76, 0xff03bc76, 0xff03bc77, 0xff03bc77, 0xff03bd77, 0xff03bd78,
    0xff03bd78, 0xff03be78, 0xff03be78, 0xff03bf79, 0xff03bf79, 0xff03bf79, 0xff03c079, 0xff03c07a,
    0xff03c07a, 0xff03c17a, 0xff03c17a, 0xff03c27b, 0xff03c27b, 0xff03c27b, 0xff03c37c, 0xff03c37c,
    0xff03c37c, 0xff03c47c, 0xff03c47d, 0xff03c47d, 0xff03c57d, 0xff03c57d, 0xff03c67e, 0xff03c67e,
    0xff03c67e, 0xff03c77e, 0xff03c77f, 0xff03c77f, 0xff03c87f, 0xff03c880, 0xff03c980, 0xff03c980,
    0xff03c980, 0xff02ca81, 0xff02ca81, 0xff02ca81, 0xff02cb81, 0xff02cb82, 0xff02cc82, 0xff02cc82,
    0xff02cc82, 0xff02cd83, 0xff02cd83, 0xff02cd83, 0xff02ce84, 0xff02ce84, 0xff02ce84, 0xff02cf84,
    0xff02cf85, 0xff02d085, 0xff02d085, 0xff02d085, 0xff02d186, 0xff02d186, 0xff02d186, 0xff02d286,
    0xff02d287, 0xff02d387, 0xff02d387, 0xff02d388, 0xff02d488, 0xff02d488, 0xff02d488, 0xff02d589,
    0xff02d589, 0xff02d689, 0xff02d689, 0xff02d68a, 0xff02d78a, 0xff02d78a, 0xff02d78a, 0xff02d88b,
    0xff02d88b, 0xff02d88b, 0xff02d98c, 0xff02d98c, 0xff02da8c, 0xff02da8c, 0xff02da8d, 0xff02db8d,
    0xff02db8d, 0xff02db8d, 0xff02dc8e, 0xff02dc8e, 0xff02dd8e, 0xff02dd8e, 0xff02dd8f, 0xff02de8f,
    0xff02de8f, 0xff02de90, 0xff02df90, 0xff01df90, 0xff01e090, 0xff01e091, 0xff01e091, 0xff01e191,
    0xff01e191, 0xff01e192, 0xff01e292, 0xff01e292, 0xff01e292, 0xff01e393, 0xff01e393, 0xff01e493,
    0xff01e494, 0xff01e494, 0xff01e594, 0xff01e594, 0xff01e595, 0xff01e695, 0xff01e695, 0xff01e795,
    0xff01e796, 0xff01e796, 0xff01e896, 0xff01e896, 0xff01e897, 0xff01e997, 0xff01e997, 0xff01ea98,
    0xff01ea98, 0xff01ea98, 0xff01eb98, 0xff01eb99, 0xff01eb99, 0xff01ec99, 0xff01ec99, 0xff01ec9a,
    0xff01ed9a, 0xff01ed9a, 0xff01ee9a, 0xff01ee9b, 0xff01ee9b, 0xff01ef9b, 0xff01ef9c, 0xff01ef9c,
    0xff01f09c, 0xff01f09c, 0xff01f19d, 0xff01f19d, 0xff01f19d, 0xff01f29d, 0xff01f29e, 0xff01f29e,
    0xff01f39e, 0xff01f39e, 0xff01f49f, 0xff01f49f, 0xff01f49f, 0xff00f5a0, 0xff00f5a0, 0xff00f5a0,
    0xff00f6a0, 0xff00f6a1, 0xff00f6a1, 0xff00f7a1, 0xff00f7a1, 0xff00f8a2, 0xff00f8a2, 0xff00f8a2,
    0xff00f9a2, 0xff00f9a3, 0xff00f9a3, 0xff00faa3, 0xff00faa4, 0xff00fba4, 0xff00fba4, 0xff00fba4,
    0xff00fca5, 0xff00fca5, 0xff00fca5, 0xff00fda5, 0xff00fda6, 0xff00fea6, 0xff00fea6, 0xff00fea6,
    0xff00ffa7, 0xff00ffa7, 0xff00ffa7, 0xff00fea6, 0xff00fea6, 0xff00fda6, 0xff00fda6, 0xff00fda5,
    0xff00fca5, 0xff00fca5, 0xff00fca5, 0xff00fba4, 0xff00fba4, 0xff00faa4, 0xff00faa3, 0xff00faa3,
    0xff00f9a3, 0xff00f9a3, 0xff00f8a2, 0xff00f8a2, 0xff00f8a2, 0xff00f7a1, 0xff00f7a1, 0xff00f7a1,
    0xff00f6a1, 0xff00f6a0, 0xff00f5a0, 0xff00f5a0, 0xff00f5a0, 0xff01f49f, 0xff01f49f, 0xff01f39f,
    0xff01f39e, 0xff01f39e, 0xff01f29e, 0xff01f29e, 0xff01f29d, 0xff01f19d, 0xff01f19d, 0xff01f09c,
    0xff01f09c, 0xff01f09c, 0xff01ef9c, 0xff01ef9b, 0xff01ee9b, 0xff01ee9b, 0xff01ee9b, 0xff01ed9a,
    0xff01ed9a, 0xff01ed9a, 0xff01ec99, 0xff01ec99, 0xff01eb99, 0xff01eb99, 0xff01eb98, 0xff01ea98,
    0xff01ea98, 0xff01e997, 0xff01e997, 0xff01e997, 0xff01e897, 0xff01e896, 0xff01e896, 0xff01e796,
    0xff01e796, 0xff01e695, 0xff01e695, 0xff01e695, 0xff01e594, 0xff01e594, 0xff01e494, 0xff01e494,
    0xff01e493, 0xff01e393, 0xff01e393, 0xff01e393, 0xff01e292, 0xff01e292, 0xff01e192, 0xff01e191,
    0xff01e191, 0xff01e091, 0xff01e091, 0xff01df90, 0xff01df90, 0xff02df90, 0xff02de8f, 0xff02de8f,
    0xff02de8f, 0xff02dd8f, 0xff02dd8e, 0xff02dc8e, 0xff02dc8e, 0xff02dc8e, 0xff02db8d, 0xff02db8d,
    0xff02da8d, 0xff02da8c, 0xff02da8c, 0xff02d98c, 0xff02d98c, 0xff02d98b, 0xff02d88b, 0xff02d88b,
    0xff02d78a, 0xff02d78a, 0xff02d78a, 0xff02d68a, 0xff02d689, 0xff02d589, 0xff02d589, 0xff02d589,
    0xff02d488, 0xff02d488, 0xff02d488, 0xff02d387, 0xff02d387, 0xff02d287, 0xff02d287, 0xff02d286,
    0xff02d186, 0xff02d186, 0xff02d085, 0xff02d085, 0xff02d085, 0xff02cf85, 0xff02cf84, 0xff02cf84,
    0xff02ce84, 0xff02ce84, 0xff02cd83, 0xff02cd83, 0xff02cd83, 0xff02cc82, 0xff02cc82, 0xff02cb82,
    0xff02cb82, 0xff02cb81, 0xff02ca81, 0xff02ca81, 0xff02ca81, 0xff03c980, 0xff03c980, 0xff03c880,
    0xff03c87f, 0xff03c87f, 0xff03c77f, 0xff03c77f, 0xff03c67e, 0xff03c67e, 0xff03c67e, 0xff03c57d,
    0xff03c57d, 0xff03c57d, 0xff03c47d, 0xff03c47c, 0xff03c37c, 0xff03c37c, 0xff03c37c, 0xff03c27b,
    0xff03c27b, 0xff03c17b, 0xff03c17a, 0xff03c17a, 0xff03c07a, 0xff03c07a, 0xff03c079, 0xff03bf79,
    0xff03bf79, 0xff03be78, 0xff03be78, 0xff03be78, 0xff03bd78, 0xff03bd77, 0xff03bc77, 0xff03bc77,
    0xff03bc77, 0xff03bb76, 0xff03bb76, 0xff03bb76, 0xff03ba75, 0xff03ba75, 0xff03b975, 0xff03b975,
    0xff03b974, 0xff03b874, 0xff03b874, 0xff03b773, 0xff03b773, 0xff03b773, 0xff03b673, 0xff03b672,
    0xff03b672, 0xff03b572, 0xff03b572, 0xff03b471, 0xff03b471, 0xff04b471, 0xff04b370, 0xff04b370,
    0xff04b270, 0xff04b270, 0xff04b26f, 0xff04b16f, 0xff04b16f, 0xff04b16f, 0xff04b06e, 0xff04b06e,
    0xff04af6e, 0xff04af6d, 0xff04af6d, 0xff04ae6d, 0xff04ae6d, 0xff04ad6c, 0xff04ad6c, 0xff04ad6c,
    0xff04ac6b, 0xff04ac6b, 0xff04ac6b, 0xff04ab6b, 0xff04ab6a, 0xff04aa6a, 0xff04aa6a, 0xff04aa6a,
    0xff04a969, 0xff04a969, 0xff04a869, 0xff04a868, 0xff04a868, 0xff04a768, 0xff04a768, 0xff04a767,
    0xff04a667, 0xff04a667, 0xff04a566, 0xff04a566, 0xff04a566, 0xff04a466, 0xff04a465, 0xff04a365,
    0xff04a365, 0xff04a365, 0xff04a264, 0xff04a264, 0xff04a264, 0xff04a163, 0xff04a163, 0xff04a063,
    0xff04a063, 0xff04a062, 0xff049f62, 0xff049f62, 0xff059f62, 0xff059e61, 0xff059e61, 0xff059d61,
    0xff059d60, 0xff059d60, 0xff059c60, 0xff059c60, 0xff059b5f, 0xff059b5f, 0xff059b5f, 0xff059a5e,
    0xff059a5e, 0xff059a5e, 0xff05995e, 0xff05995d, 0xff05985d, 0xff05985d, 0xff05985d, 0xff05975c,
    0xff05975c, 0xff05965c, 0xff05965b, 0xff05965b, 0xff05955b, 0xff05955b, 0xff05955a, 0xff05945a,
    0xff05945a, 0xff059359, 0xff059359, 0xff059359, 0xff059259, 0xff059258, 0xff059158, 0xff059158,
    0xff059158, 0xff059057, 0xff059057, 0xff059057, 0xff058f56, 0xff058f56, 0xff058e56, 0xff058e56,
    0xff058e55, 0xff058d55, 0xff058d55, 0xff058c54, 0xff058c54, 0xff058c54, 0xff058b54, 0xff058b53,
    0xff058b53, 0xff058a53, 0xff058a53, 0xff058952, 0xff068952, 0xff068952, 0xff068851, 0xff068851,
    0xff068751, 0xff068751, 0xff068750, 0xff068650, 0xff068650, 0xff068650, 0xff06854f, 0xff06854f,
    0xff06844f, 0xff06844e, 0xff06844e, 0xff06834e, 0xff06834e, 0xff06824d, 0xff06824d, 0xff06824d,
    0xff06814c, 0xff06814c, 0xff06814c, 0xff06804c, 0xff06804b, 0xff067f4b, 0xff067f4b, 0xff067f4b,
    0xff067e4a, 0xff067e4a, 0xff067d4a, 0xff067d49, 0xff067d49, 0xff067c49, 0xff067c49, 0xff067c48,
    0xff067b48, 0xff067b48, 0xff067a47, 0xff067a47, 0xff067a47, 0xff067947, 0xff067946, 0xff067846,
    0xff067846, 0xff067846, 0xff067745, 0xff067745, 0xff067745, 0xff067644, 0xff067644, 0xff067544,
    0xff067544, 0xff067543, 0xff067443, 0xff067443, 0xff077342, 0xff077342, 0xff077342, 0xff077242,
    0xff077241, 0xff077241, 0xff077141, 0xff077141, 0xff077040, 0xff077040, 0xff077040, 0xff076f3f,
    0xff076f3f, 0xff076e3f, 0xff076e3f, 0xff076e3e, 0xff076d3e, 0xff076d3e, 0xff076d3e, 0xff076c3d,
    0xff076c3d, 0xff076b3d, 0xff076b3c, 0xff076b3c, 0xff076a3c, 0xff076a3c, 0xff07693b, 0xff07693b,
    0xff07693b, 0xff07683a, 0xff07683a, 0xff07683a, 0xff07673a, 0xff076739, 0xff076639, 0xff076639,
    0xff076639, 0xff076538, 0xff076538, 0xff076438, 0xff076437, 0xff076437, 0xff076337, 0xff076337,
    0xff076336, 0xff076236, 0xff076236, 0xff076135, 0xff076135, 0xff076135, 0xff076035, 0xff076034,
    0xff075f34, 0xff075f34, 0xff075f34, 0xff075e33, 0xff085e33, 0xff085e33, 0xff085d32, 0xff085d32,
    0xff085c32, 0xff085c32, 0xff085c31, 0xff085b31, 0xff085b31, 0xff085a30, 0xff085a30, 0xff085a30,
    0xff085930, 0xff08592f, 0xff08592f, 0xff08582f, 0xff08582f, 0xff08572e, 0xff08572e, 0xff08572e,
    0xff08562d, 0xff08562d, 0xff08552d, 0xff08552d, 0xff08552c, 0xff08542c, 0xff08542c, 0xff08542c,
    0xff08532b, 0xff08532b, 0xff08522b, 0xff08522a, 0xff08522a, 0xff08512a, 0xff08512a, 0xff085029,
    0xff085029, 0xff085029, 0xff084f28, 0xff084f28, 0xff084f28, 0xff084e28, 0xff084e27, 0xff084d27,
    0xff084d27, 0xff084d27, 0xff084c26, 0xff084c26, 0xff084b26, 0xff084b25, 0xff084b25, 0xff084a25,
    0xff084a25, 0xff084a24, 0xff084924, 0xff084924, 0xff094823, 0xff094823, 0xff094823, 0xff094723,
    0xff094722, 0xff094622, 0xff094622, 0xff094622, 0xff094521, 0xff094521, 0xff094521, 0xff094420,
    0xff094420, 0xff094320, 0xff094320, 0xff09431f, 0xff09421f, 0xff09421f, 0xff09411e, 0xff09411e,
    0xff09411e, 0xff09401e, 0xff09401d, 0xff09401d, 0xff093f1d, 0xff093f1d, 0xff093e1c, 0xff093e1c
};
#endif // SIMULATOR

const float linear_gradient_left_upper_wing_linear_gradient_stop_positions[] = {
    0.0000f, 0.5100f, 1.0000f
};

const uint32_t linear_gradient_left_upper_wing_linear_gradient_stop_colors[] = {
    0xff093e1c, 0xff00ffa7, 0xff093e1c
};

static const VGLinearGradient svg_left_upper_wing_shape_0_fill = {
#ifdef SIMULATOR
    linear_gradient_left_upper_wing_linear_gradient_palette,
#else
    0, // Palette
#endif
    3, // Number of stops
    linear_gradient_left_upper_wing_linear_gradient_stop_positions,
    linear_gradient_left_upper_wing_linear_gradient_stop_colors,
    275.5360f, 27.8860f, 0.0000f, 26.6320f, // Start and end point
    true // Is solid
};

static const VGShape svg_left_upper_wing_shape_0 = {
    5, 5,                                                          // numCommands, numPoints
    svg_left_upper_wing_shape_0_commands,                          // commands
    svg_left_upper_wing_shape_0_points,                            // points
    VG_FILL_NON_ZERO,                                              // drawingMode
    VG_LINEAR_GRADIENT,                                            // fillMode
    VG_NONE,                                                       // strokeMode
    &svg_left_upper_wing_shape_0_fill,                             // fillPaint
    0,                                                             // strokePaint
    0.0000f,                                                       // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                      // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                        // strokeLineCap
    4.0000,                                                        // strokeMiterLimit
    255,                                                           // fillAlpha
    255,                                                           // strokeAlpha
    { 0.0000f, 26.2860f, 272.0000f, 28.2860f },                    // boundingbox[4]
    { -0.0000f, 1.0000f, -1.0000f, -0.0000f, 28.2860f, -0.0000f }, // transformation[6]
    0                                                              // next
};

static const uint8_t svg_left_upper_wing_1_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_left_upper_wing_1_shape_0_points[] = {
    419.9500f, 28.2860f, 0.0000f, 26.2860f, 419.9500f,
};

#ifdef SIMULATOR
// Linear gradient
// Stops:
// 0 @ 0 = ff093e1c
// 1 @ 521 = ff00ffa7
// 2 @ 1023 = ff093e1c
static const uint32_t linear_gradient_left_upper_wing_1_linear_gradient_palette[] = {
    0xff093e1c, 0xff093e1c, 0xff093f1d, 0xff093f1d, 0xff093f1d, 0xff09401d, 0xff09401e, 0xff09411e,
    0xff09411e, 0xff09411e, 0xff09421f, 0xff09421f, 0xff09421f, 0xff09431f, 0xff094320, 0xff094420,
    0xff094420, 0xff094421, 0xff094521, 0xff094521, 0xff094521, 0xff094622, 0xff094622, 0xff094722,
    0xff094722, 0xff094723, 0xff094823, 0xff094823, 0xff094823, 0xff084924, 0xff084924, 0xff084924,
    0xff084a25, 0xff084a25, 0xff084b25, 0xff084b25, 0xff084b26, 0xff084c26, 0xff084c26, 0xff084c26,
    0xff084d27, 0xff084d27, 0xff084e27, 0xff084e27, 0xff084e28, 0xff084f28, 0xff084f28, 0xff084f29,
    0xff085029, 0xff085029, 0xff085129, 0xff08512a, 0xff08512a, 0xff08522a, 0xff08522a, 0xff08522b,
    0xff08532b, 0xff08532b, 0xff08532b, 0xff08542c, 0xff08542c, 0xff08552c, 0xff08552d, 0xff08552d,
    0xff08562d, 0xff08562d, 0xff08562e, 0xff08572e, 0xff08572e, 0xff08582e, 0xff08582f, 0xff08582f,
    0xff08592f, 0xff08592f, 0xff085930, 0xff085a30, 0xff085a30, 0xff085b31, 0xff085b31, 0xff085b31,
    0xff085c31, 0xff085c32, 0xff085c32, 0xff085d32, 0xff085d32, 0xff085d33, 0xff085e33, 0xff075e33,
    0xff075f33, 0xff075f34, 0xff075f34, 0xff076034, 0xff076035, 0xff076035, 0xff076135, 0xff076135,
    0xff076236, 0xff076236, 0xff076236, 0xff076336, 0xff076337, 0xff076337, 0xff076437, 0xff076437,
    0xff076538, 0xff076538, 0xff076538, 0xff076639, 0xff076639, 0xff076639, 0xff076739, 0xff07673a,
    0xff07673a, 0xff07683a, 0xff07683a, 0xff07693b, 0xff07693b, 0xff07693b, 0xff076a3b, 0xff076a3c,
    0xff076a3c, 0xff076b3c, 0xff076b3d, 0xff076c3d, 0xff076c3d, 0xff076c3d, 0xff076d3e, 0xff076d3e,
    0xff076d3e, 0xff076e3e, 0xff076e3f, 0xff076f3f, 0xff076f3f, 0xff076f3f, 0xff077040, 0xff077040,
    0xff077040, 0xff077141, 0xff077141, 0xff077141, 0xff077241, 0xff077242, 0xff077342, 0xff077342,
    0xff077342, 0xff067443, 0xff067443, 0xff067443, 0xff067543, 0xff067544, 0xff067644, 0xff067644,
    0xff067645, 0xff067745, 0xff067745, 0xff067745, 0xff067846, 0xff067846, 0xff067946, 0xff067946,
    0xff067947, 0xff067a47, 0xff067a47, 0xff067a47, 0xff067b48, 0xff067b48, 0xff067b48, 0xff067c49,
    0xff067c49, 0xff067d49, 0xff067d49, 0xff067d4a, 0xff067e4a, 0xff067e4a, 0xff067e4a, 0xff067f4b,
    0xff067f4b, 0xff06804b, 0xff06804b, 0xff06804c, 0xff06814c, 0xff06814c, 0xff06814d, 0xff06824d,
    0xff06824d, 0xff06834d, 0xff06834e, 0xff06834e, 0xff06844e, 0xff06844e, 0xff06844f, 0xff06854f,
    0xff06854f, 0xff06854f, 0xff068650, 0xff068650, 0xff068750, 0xff068751, 0xff068751, 0xff068851,
    0xff068851, 0xff068852, 0xff068952, 0xff058952, 0xff058a52, 0xff058a53, 0xff058a53, 0xff058b53,
    0xff058b53, 0xff058b54, 0xff058c54, 0xff058c54, 0xff058d55, 0xff058d55, 0xff058d55, 0xff058e55,
    0xff058e56, 0xff058e56, 0xff058f56, 0xff058f56, 0xff058f57, 0xff059057, 0xff059057, 0xff059157,
    0xff059158, 0xff059158, 0xff059258, 0xff059259, 0xff059259, 0xff059359, 0xff059359, 0xff05945a,
    0xff05945a, 0xff05945a, 0xff05955a, 0xff05955b, 0xff05955b, 0xff05965b, 0xff05965b, 0xff05975c,
    0xff05975c, 0xff05975c, 0xff05985d, 0xff05985d, 0xff05985d, 0xff05995d, 0xff05995e, 0xff05995e,
    0xff059a5e, 0xff059a5e, 0xff059b5f, 0xff059b5f, 0xff059b5f, 0xff059c5f, 0xff059c60, 0xff059c60,
    0xff059d60, 0xff059d61, 0xff059e61, 0xff059e61, 0xff059e61, 0xff049f62, 0xff049f62, 0xff049f62,
    0xff04a062, 0xff04a063, 0xff04a163, 0xff04a163, 0xff04a164, 0xff04a264, 0xff04a264, 0xff04a264,
    0xff04a365, 0xff04a365, 0xff04a465, 0xff04a465, 0xff04a466, 0xff04a566, 0xff04a566, 0xff04a566,
    0xff04a667, 0xff04a667, 0xff04a667, 0xff04a768, 0xff04a768, 0xff04a868, 0xff04a868, 0xff04a869,
    0xff04a969, 0xff04a969, 0xff04a969, 0xff04aa6a, 0xff04aa6a, 0xff04ab6a, 0xff04ab6a, 0xff04ab6b,
    0xff04ac6b, 0xff04ac6b, 0xff04ac6c, 0xff04ad6c, 0xff04ad6c, 0xff04ae6c, 0xff04ae6d, 0xff04ae6d,
    0xff04af6d, 0xff04af6d, 0xff04af6e, 0xff04b06e, 0xff04b06e, 0xff04b06e, 0xff04b16f, 0xff04b16f,
    0xff04b26f, 0xff04b270, 0xff04b270, 0xff04b370, 0xff04b370, 0xff04b371, 0xff04b471, 0xff03b471,
    0xff03b571, 0xff03b572, 0xff03b572, 0xff03b672, 0xff03b672, 0xff03b673, 0xff03b773, 0xff03b773,
    0xff03b874, 0xff03b874, 0xff03b874, 0xff03b974, 0xff03b975, 0xff03b975, 0xff03ba75, 0xff03ba75,
    0xff03ba76, 0xff03bb76, 0xff03bb76, 0xff03bc76, 0xff03bc77, 0xff03bc77, 0xff03bd77, 0xff03bd78,
    0xff03bd78, 0xff03be78, 0xff03be78, 0xff03bf79, 0xff03bf79, 0xff03bf79, 0xff03c079, 0xff03c07a,
    0xff03c07a, 0xff03c17a, 0xff03c17a, 0xff03c27b, 0xff03c27b, 0xff03c27b, 0xff03c37c, 0xff03c37c,
    0xff03c37c, 0xff03c47c, 0xff03c47d, 0xff03c47d, 0xff03c57d, 0xff03c57d, 0xff03c67e, 0xff03c67e,
    0xff03c67e, 0xff03c77e, 0xff03c77f, 0xff03c77f, 0xff03c87f, 0xff03c880, 0xff03c980, 0xff03c980,
    0xff03c980, 0xff02ca81, 0xff02ca81, 0xff02ca81, 0xff02cb81, 0xff02cb82, 0xff02cc82, 0xff02cc82,
    0xff02cc82, 0xff02cd83, 0xff02cd83, 0xff02cd83, 0xff02ce84, 0xff02ce84, 0xff02ce84, 0xff02cf84,
    0xff02cf85, 0xff02d085, 0xff02d085, 0xff02d085, 0xff02d186, 0xff02d186, 0xff02d186, 0xff02d286,
    0xff02d287, 0xff02d387, 0xff02d387, 0xff02d388, 0xff02d488, 0xff02d488, 0xff02d488, 0xff02d589,
    0xff02d589, 0xff02d689, 0xff02d689, 0xff02d68a, 0xff02d78a, 0xff02d78a, 0xff02d78a, 0xff02d88b,
    0xff02d88b, 0xff02d88b, 0xff02d98c, 0xff02d98c, 0xff02da8c, 0xff02da8c, 0xff02da8d, 0xff02db8d,
    0xff02db8d, 0xff02db8d, 0xff02dc8e, 0xff02dc8e, 0xff02dd8e, 0xff02dd8e, 0xff02dd8f, 0xff02de8f,
    0xff02de8f, 0xff02de90, 0xff02df90, 0xff01df90, 0xff01e090, 0xff01e091, 0xff01e091, 0xff01e191,
    0xff01e191, 0xff01e192, 0xff01e292, 0xff01e292, 0xff01e292, 0xff01e393, 0xff01e393, 0xff01e493,
    0xff01e494, 0xff01e494, 0xff01e594, 0xff01e594, 0xff01e595, 0xff01e695, 0xff01e695, 0xff01e795,
    0xff01e796, 0xff01e796, 0xff01e896, 0xff01e896, 0xff01e897, 0xff01e997, 0xff01e997, 0xff01ea98,
    0xff01ea98, 0xff01ea98, 0xff01eb98, 0xff01eb99, 0xff01eb99, 0xff01ec99, 0xff01ec99, 0xff01ec9a,
    0xff01ed9a, 0xff01ed9a, 0xff01ee9a, 0xff01ee9b, 0xff01ee9b, 0xff01ef9b, 0xff01ef9c, 0xff01ef9c,
    0xff01f09c, 0xff01f09c, 0xff01f19d, 0xff01f19d, 0xff01f19d, 0xff01f29d, 0xff01f29e, 0xff01f29e,
    0xff01f39e, 0xff01f39e, 0xff01f49f, 0xff01f49f, 0xff01f49f, 0xff00f5a0, 0xff00f5a0, 0xff00f5a0,
    0xff00f6a0, 0xff00f6a1, 0xff00f6a1, 0xff00f7a1, 0xff00f7a1, 0xff00f8a2, 0xff00f8a2, 0xff00f8a2,
    0xff00f9a2, 0xff00f9a3, 0xff00f9a3, 0xff00faa3, 0xff00faa4, 0xff00fba4, 0xff00fba4, 0xff00fba4,
    0xff00fca5, 0xff00fca5, 0xff00fca5, 0xff00fda5, 0xff00fda6, 0xff00fea6, 0xff00fea6, 0xff00fea6,
    0xff00ffa7, 0xff00ffa7, 0xff00ffa7, 0xff00fea6, 0xff00fea6, 0xff00fda6, 0xff00fda6, 0xff00fda5,
    0xff00fca5, 0xff00fca5, 0xff00fca5, 0xff00fba4, 0xff00fba4, 0xff00faa4, 0xff00faa3, 0xff00faa3,
    0xff00f9a3, 0xff00f9a3, 0xff00f8a2, 0xff00f8a2, 0xff00f8a2, 0xff00f7a1, 0xff00f7a1, 0xff00f7a1,
    0xff00f6a1, 0xff00f6a0, 0xff00f5a0, 0xff00f5a0, 0xff00f5a0, 0xff01f49f, 0xff01f49f, 0xff01f39f,
    0xff01f39e, 0xff01f39e, 0xff01f29e, 0xff01f29e, 0xff01f29d, 0xff01f19d, 0xff01f19d, 0xff01f09c,
    0xff01f09c, 0xff01f09c, 0xff01ef9c, 0xff01ef9b, 0xff01ee9b, 0xff01ee9b, 0xff01ee9b, 0xff01ed9a,
    0xff01ed9a, 0xff01ed9a, 0xff01ec99, 0xff01ec99, 0xff01eb99, 0xff01eb99, 0xff01eb98, 0xff01ea98,
    0xff01ea98, 0xff01e997, 0xff01e997, 0xff01e997, 0xff01e897, 0xff01e896, 0xff01e896, 0xff01e796,
    0xff01e796, 0xff01e695, 0xff01e695, 0xff01e695, 0xff01e594, 0xff01e594, 0xff01e494, 0xff01e494,
    0xff01e493, 0xff01e393, 0xff01e393, 0xff01e393, 0xff01e292, 0xff01e292, 0xff01e192, 0xff01e191,
    0xff01e191, 0xff01e091, 0xff01e091, 0xff01df90, 0xff01df90, 0xff02df90, 0xff02de8f, 0xff02de8f,
    0xff02de8f, 0xff02dd8f, 0xff02dd8e, 0xff02dc8e, 0xff02dc8e, 0xff02dc8e, 0xff02db8d, 0xff02db8d,
    0xff02da8d, 0xff02da8c, 0xff02da8c, 0xff02d98c, 0xff02d98c, 0xff02d98b, 0xff02d88b, 0xff02d88b,
    0xff02d78a, 0xff02d78a, 0xff02d78a, 0xff02d68a, 0xff02d689, 0xff02d589, 0xff02d589, 0xff02d589,
    0xff02d488, 0xff02d488, 0xff02d488, 0xff02d387, 0xff02d387, 0xff02d287, 0xff02d287, 0xff02d286,
    0xff02d186, 0xff02d186, 0xff02d085, 0xff02d085, 0xff02d085, 0xff02cf85, 0xff02cf84, 0xff02cf84,
    0xff02ce84, 0xff02ce84, 0xff02cd83, 0xff02cd83, 0xff02cd83, 0xff02cc82, 0xff02cc82, 0xff02cb82,
    0xff02cb82, 0xff02cb81, 0xff02ca81, 0xff02ca81, 0xff02ca81, 0xff03c980, 0xff03c980, 0xff03c880,
    0xff03c87f, 0xff03c87f, 0xff03c77f, 0xff03c77f, 0xff03c67e, 0xff03c67e, 0xff03c67e, 0xff03c57d,
    0xff03c57d, 0xff03c57d, 0xff03c47d, 0xff03c47c, 0xff03c37c, 0xff03c37c, 0xff03c37c, 0xff03c27b,
    0xff03c27b, 0xff03c17b, 0xff03c17a, 0xff03c17a, 0xff03c07a, 0xff03c07a, 0xff03c079, 0xff03bf79,
    0xff03bf79, 0xff03be78, 0xff03be78, 0xff03be78, 0xff03bd78, 0xff03bd77, 0xff03bc77, 0xff03bc77,
    0xff03bc77, 0xff03bb76, 0xff03bb76, 0xff03bb76, 0xff03ba75, 0xff03ba75, 0xff03b975, 0xff03b975,
    0xff03b974, 0xff03b874, 0xff03b874, 0xff03b773, 0xff03b773, 0xff03b773, 0xff03b673, 0xff03b672,
    0xff03b672, 0xff03b572, 0xff03b572, 0xff03b471, 0xff03b471, 0xff04b471, 0xff04b370, 0xff04b370,
    0xff04b270, 0xff04b270, 0xff04b26f, 0xff04b16f, 0xff04b16f, 0xff04b16f, 0xff04b06e, 0xff04b06e,
    0xff04af6e, 0xff04af6d, 0xff04af6d, 0xff04ae6d, 0xff04ae6d, 0xff04ad6c, 0xff04ad6c, 0xff04ad6c,
    0xff04ac6b, 0xff04ac6b, 0xff04ac6b, 0xff04ab6b, 0xff04ab6a, 0xff04aa6a, 0xff04aa6a, 0xff04aa6a,
    0xff04a969, 0xff04a969, 0xff04a869, 0xff04a868, 0xff04a868, 0xff04a768, 0xff04a768, 0xff04a767,
    0xff04a667, 0xff04a667, 0xff04a566, 0xff04a566, 0xff04a566, 0xff04a466, 0xff04a465, 0xff04a365,
    0xff04a365, 0xff04a365, 0xff04a264, 0xff04a264, 0xff04a264, 0xff04a163, 0xff04a163, 0xff04a063,
    0xff04a063, 0xff04a062, 0xff049f62, 0xff049f62, 0xff059f62, 0xff059e61, 0xff059e61, 0xff059d61,
    0xff059d60, 0xff059d60, 0xff059c60, 0xff059c60, 0xff059b5f, 0xff059b5f, 0xff059b5f, 0xff059a5e,
    0xff059a5e, 0xff059a5e, 0xff05995e, 0xff05995d, 0xff05985d, 0xff05985d, 0xff05985d, 0xff05975c,
    0xff05975c, 0xff05965c, 0xff05965b, 0xff05965b, 0xff05955b, 0xff05955b, 0xff05955a, 0xff05945a,
    0xff05945a, 0xff059359, 0xff059359, 0xff059359, 0xff059259, 0xff059258, 0xff059158, 0xff059158,
    0xff059158, 0xff059057, 0xff059057, 0xff059057, 0xff058f56, 0xff058f56, 0xff058e56, 0xff058e56,
    0xff058e55, 0xff058d55, 0xff058d55, 0xff058c54, 0xff058c54, 0xff058c54, 0xff058b54, 0xff058b53,
    0xff058b53, 0xff058a53, 0xff058a53, 0xff058952, 0xff068952, 0xff068952, 0xff068851, 0xff068851,
    0xff068751, 0xff068751, 0xff068750, 0xff068650, 0xff068650, 0xff068650, 0xff06854f, 0xff06854f,
    0xff06844f, 0xff06844e, 0xff06844e, 0xff06834e, 0xff06834e, 0xff06824d, 0xff06824d, 0xff06824d,
    0xff06814c, 0xff06814c, 0xff06814c, 0xff06804c, 0xff06804b, 0xff067f4b, 0xff067f4b, 0xff067f4b,
    0xff067e4a, 0xff067e4a, 0xff067d4a, 0xff067d49, 0xff067d49, 0xff067c49, 0xff067c49, 0xff067c48,
    0xff067b48, 0xff067b48, 0xff067a47, 0xff067a47, 0xff067a47, 0xff067947, 0xff067946, 0xff067846,
    0xff067846, 0xff067846, 0xff067745, 0xff067745, 0xff067745, 0xff067644, 0xff067644, 0xff067544,
    0xff067544, 0xff067543, 0xff067443, 0xff067443, 0xff077342, 0xff077342, 0xff077342, 0xff077242,
    0xff077241, 0xff077241, 0xff077141, 0xff077141, 0xff077040, 0xff077040, 0xff077040, 0xff076f3f,
    0xff076f3f, 0xff076e3f, 0xff076e3f, 0xff076e3e, 0xff076d3e, 0xff076d3e, 0xff076d3e, 0xff076c3d,
    0xff076c3d, 0xff076b3d, 0xff076b3c, 0xff076b3c, 0xff076a3c, 0xff076a3c, 0xff07693b, 0xff07693b,
    0xff07693b, 0xff07683a, 0xff07683a, 0xff07683a, 0xff07673a, 0xff076739, 0xff076639, 0xff076639,
    0xff076639, 0xff076538, 0xff076538, 0xff076438, 0xff076437, 0xff076437, 0xff076337, 0xff076337,
    0xff076336, 0xff076236, 0xff076236, 0xff076135, 0xff076135, 0xff076135, 0xff076035, 0xff076034,
    0xff075f34, 0xff075f34, 0xff075f34, 0xff075e33, 0xff085e33, 0xff085e33, 0xff085d32, 0xff085d32,
    0xff085c32, 0xff085c32, 0xff085c31, 0xff085b31, 0xff085b31, 0xff085a30, 0xff085a30, 0xff085a30,
    0xff085930, 0xff08592f, 0xff08592f, 0xff08582f, 0xff08582f, 0xff08572e, 0xff08572e, 0xff08572e,
    0xff08562d, 0xff08562d, 0xff08552d, 0xff08552d, 0xff08552c, 0xff08542c, 0xff08542c, 0xff08542c,
    0xff08532b, 0xff08532b, 0xff08522b, 0xff08522a, 0xff08522a, 0xff08512a, 0xff08512a, 0xff085029,
    0xff085029, 0xff085029, 0xff084f28, 0xff084f28, 0xff084f28, 0xff084e28, 0xff084e27, 0xff084d27,
    0xff084d27, 0xff084d27, 0xff084c26, 0xff084c26, 0xff084b26, 0xff084b25, 0xff084b25, 0xff084a25,
    0xff084a25, 0xff084a24, 0xff084924, 0xff084924, 0xff094823, 0xff094823, 0xff094823, 0xff094723,
    0xff094722, 0xff094622, 0xff094622, 0xff094622, 0xff094521, 0xff094521, 0xff094521, 0xff094420,
    0xff094420, 0xff094320, 0xff094320, 0xff09431f, 0xff09421f, 0xff09421f, 0xff09411e, 0xff09411e,
    0xff09411e, 0xff09401e, 0xff09401d, 0xff09401d, 0xff093f1d, 0xff093f1d, 0xff093e1c, 0xff093e1c
};
#endif // SIMULATOR

const float linear_gradient_left_upper_wing_1_linear_gradient_stop_positions[] = {
    0.0000f, 0.5100f, 1.0000f
};

const uint32_t linear_gradient_left_upper_wing_1_linear_gradient_stop_colors[] = {
    0xff093e1c, 0xff00ffa7, 0xff093e1c
};

static const VGLinearGradient svg_left_upper_wing_1_shape_0_fill = {
#ifdef SIMULATOR
    linear_gradient_left_upper_wing_1_linear_gradient_palette,
#else
    0, // Palette
#endif
    3, // Number of stops
    linear_gradient_left_upper_wing_1_linear_gradient_stop_positions,
    linear_gradient_left_upper_wing_1_linear_gradient_stop_colors,
    425.4094f, 27.8860f, 0.0000f, 26.6320f, // Start and end point
    true // Is solid
};

static const VGShape svg_left_upper_wing_1_shape_0 = {
    5, 5,                                                           // numCommands, numPoints
    svg_left_upper_wing_1_shape_0_commands,                         // commands
    svg_left_upper_wing_1_shape_0_points,                           // points
    VG_FILL_NON_ZERO,                                               // drawingMode
    VG_LINEAR_GRADIENT,                                             // fillMode
    VG_NONE,                                                        // strokeMode
    &svg_left_upper_wing_1_shape_0_fill,                            // fillPaint
    0,                                                              // strokePaint
    0.0000f,                                                        // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                       // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                         // strokeLineCap
    4.0000,                                                         // strokeMiterLimit
    255,                                                            // fillAlpha
    255,                                                            // strokeAlpha
    { 0.0000f, 26.2860f, 419.9500f, 28.2860f },                     // boundingbox[4]
    { -1.0000f, -0.0000f, 0.0000f, -1.0000f, 419.9500f, 28.2860f }, // transformation[6]
    0                                                               // next
};

static const uint8_t svg_menu_banner_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_HLINE, VECTOR_PRIM_VLINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_menu_banner_shape_0_points[] = {
    0.0000f, 587.0530f, 58.0500f, 315.0530f, 0.0000f,
};

#ifdef SIMULATOR
// Linear gradient
// Stops:
// 0 @ 0 = ff313437
// 1 @ 149 = ff26282a
// 2 @ 397 = ff1e2023
// 3 @ 1023 = ff34383d
static const uint32_t linear_gradient_menu_banner_linear_gradient_palette[] = {
    0xff313437, 0xff313437, 0xff313437, 0xff313437, 0xff313437, 0xff313437, 0xff313436, 0xff303336,
    0xff303336, 0xff303336, 0xff303336, 0xff303336, 0xff303336, 0xff303336, 0xff303336, 0xff303336,
    0xff303336, 0xff303336, 0xff303335, 0xff303235, 0xff303235, 0xff2f3235, 0xff2f3235, 0xff2f3235,
    0xff2f3235, 0xff2f3235, 0xff2f3235, 0xff2f3235, 0xff2f3235, 0xff2f3234, 0xff2f3234, 0xff2f3234,
    0xff2f3134, 0xff2f3134, 0xff2e3134, 0xff2e3134, 0xff2e3134, 0xff2e3134, 0xff2e3134, 0xff2e3134,
    0xff2e3134, 0xff2e3133, 0xff2e3133, 0xff2e3133, 0xff2e3033, 0xff2e3033, 0xff2e3033, 0xff2e3033,
    0xff2d3033, 0xff2d3033, 0xff2d3033, 0xff2d3033, 0xff2d3032, 0xff2d3032, 0xff2d3032, 0xff2d3032,
    0xff2d2f32, 0xff2d2f32, 0xff2d2f32, 0xff2d2f32, 0xff2d2f32, 0xff2c2f32, 0xff2c2f32, 0xff2c2f32,
    0xff2c2f31, 0xff2c2f31, 0xff2c2f31, 0xff2c2f31, 0xff2c2f31, 0xff2c2e31, 0xff2c2e31, 0xff2c2e31,
    0xff2c2e31, 0xff2c2e31, 0xff2c2e31, 0xff2b2e30, 0xff2b2e30, 0xff2b2e30, 0xff2b2e30, 0xff2b2e30,
    0xff2b2e30, 0xff2b2d30, 0xff2b2d30, 0xff2b2d30, 0xff2b2d30, 0xff2b2d30, 0xff2b2d2f, 0xff2b2d2f,
    0xff2b2d2f, 0xff2a2d2f, 0xff2a2d2f, 0xff2a2d2f, 0xff2a2d2f, 0xff2a2d2f, 0xff2a2c2f, 0xff2a2c2f,
    0xff2a2c2f, 0xff2a2c2f, 0xff2a2c2e, 0xff2a2c2e, 0xff2a2c2e, 0xff2a2c2e, 0xff292c2e, 0xff292c2e,
    0xff292c2e, 0xff292c2e, 0xff292b2e, 0xff292b2e, 0xff292b2e, 0xff292b2d, 0xff292b2d, 0xff292b2d,
    0xff292b2d, 0xff292b2d, 0xff292b2d, 0xff292b2d, 0xff282b2d, 0xff282b2d, 0xff282a2d, 0xff282a2d,
    0xff282a2d, 0xff282a2c, 0xff282a2c, 0xff282a2c, 0xff282a2c, 0xff282a2c, 0xff282a2c, 0xff282a2c,
    0xff282a2c, 0xff272a2c, 0xff272a2c, 0xff27292c, 0xff27292b, 0xff27292b, 0xff27292b, 0xff27292b,
    0xff27292b, 0xff27292b, 0xff27292b, 0xff27292b, 0xff27292b, 0xff27292b, 0xff27292b, 0xff26282b,
    0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a,
    0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a,
    0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff26282a, 0xff25272a, 0xff25272a, 0xff252729,
    0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729,
    0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729,
    0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff252729,
    0xff252729, 0xff252729, 0xff252729, 0xff252729, 0xff242629, 0xff242629, 0xff242629, 0xff242629,
    0xff242629, 0xff242629, 0xff242629, 0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628,
    0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628,
    0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628, 0xff242628,
    0xff242628, 0xff242628, 0xff242628, 0xff232528, 0xff232528, 0xff232528, 0xff232528, 0xff232528,
    0xff232528, 0xff232528, 0xff232528, 0xff232528, 0xff232528, 0xff232528, 0xff232527, 0xff232527,
    0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527,
    0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527, 0xff232527,
    0xff232527, 0xff232527, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427,
    0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427,
    0xff222427, 0xff222427, 0xff222426, 0xff222426, 0xff222426, 0xff222426, 0xff222426, 0xff222426,
    0xff222426, 0xff222426, 0xff222426, 0xff222426, 0xff222426, 0xff222426, 0xff222426, 0xff222426,
    0xff222426, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326,
    0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326,
    0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212325, 0xff212325, 0xff212325,
    0xff212325, 0xff212325, 0xff212325, 0xff212325, 0xff212325, 0xff212325, 0xff212325, 0xff212325,
    0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225,
    0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225,
    0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225,
    0xff202224, 0xff202224, 0xff202224, 0xff202224, 0xff202224, 0xff202224, 0xff202224, 0xff1f2124,
    0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124,
    0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124,
    0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124,
    0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2123, 0xff1f2123, 0xff1e2023, 0xff1e2023,
    0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023,
    0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023,
    0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023, 0xff1e2023,
    0xff1e2023, 0xff1e2023, 0xff1e2024, 0xff1e2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124,
    0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124,
    0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124, 0xff1f2124,
    0xff1f2124, 0xff1f2124, 0xff1f2125, 0xff1f2125, 0xff1f2125, 0xff1f2225, 0xff1f2225, 0xff1f2225,
    0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225,
    0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225, 0xff202225,
    0xff202225, 0xff202225, 0xff202226, 0xff202226, 0xff202226, 0xff202226, 0xff202226, 0xff202326,
    0xff202326, 0xff202326, 0xff202326, 0xff202326, 0xff202326, 0xff212326, 0xff212326, 0xff212326,
    0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326, 0xff212326,
    0xff212326, 0xff212326, 0xff212327, 0xff212327, 0xff212327, 0xff212327, 0xff212327, 0xff212327,
    0xff212327, 0xff212427, 0xff212427, 0xff212427, 0xff212427, 0xff212427, 0xff212427, 0xff212427,
    0xff212427, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427, 0xff222427,
    0xff222427, 0xff222427, 0xff222428, 0xff222428, 0xff222428, 0xff222428, 0xff222428, 0xff222428,
    0xff222428, 0xff222428, 0xff222428, 0xff222528, 0xff222528, 0xff222528, 0xff222528, 0xff222528,
    0xff222528, 0xff222528, 0xff222528, 0xff222528, 0xff222528, 0xff222528, 0xff232528, 0xff232528,
    0xff232528, 0xff232528, 0xff232529, 0xff232529, 0xff232529, 0xff232529, 0xff232529, 0xff232529,
    0xff232529, 0xff232529, 0xff232529, 0xff232529, 0xff232529, 0xff232629, 0xff232629, 0xff232629,
    0xff232629, 0xff232629, 0xff232629, 0xff232629, 0xff232629, 0xff232629, 0xff232629, 0xff232629,
    0xff232629, 0xff232629, 0xff24262a, 0xff24262a, 0xff24262a, 0xff24262a, 0xff24262a, 0xff24262a,
    0xff24262a, 0xff24262a, 0xff24262a, 0xff24262a, 0xff24262a, 0xff24262a, 0xff24262a, 0xff24272a,
    0xff24272a, 0xff24272a, 0xff24272a, 0xff24272a, 0xff24272a, 0xff24272a, 0xff24272a, 0xff24272a,
    0xff24272a, 0xff24272a, 0xff24272b, 0xff24272b, 0xff24272b, 0xff24272b, 0xff25272b, 0xff25272b,
    0xff25272b, 0xff25272b, 0xff25272b, 0xff25272b, 0xff25272b, 0xff25272b, 0xff25272b, 0xff25272b,
    0xff25272b, 0xff25282b, 0xff25282b, 0xff25282b, 0xff25282b, 0xff25282b, 0xff25282b, 0xff25282b,
    0xff25282b, 0xff25282b, 0xff25282c, 0xff25282c, 0xff25282c, 0xff25282c, 0xff25282c, 0xff25282c,
    0xff25282c, 0xff25282c, 0xff25282c, 0xff26282c, 0xff26282c, 0xff26282c, 0xff26282c, 0xff26282c,
    0xff26282c, 0xff26282c, 0xff26282c, 0xff26292c, 0xff26292c, 0xff26292c, 0xff26292c, 0xff26292c,
    0xff26292c, 0xff26292c, 0xff26292d, 0xff26292d, 0xff26292d, 0xff26292d, 0xff26292d, 0xff26292d,
    0xff26292d, 0xff26292d, 0xff26292d, 0xff26292d, 0xff26292d, 0xff26292d, 0xff26292d, 0xff27292d,
    0xff27292d, 0xff27292d, 0xff27292d, 0xff27292d, 0xff27292d, 0xff272a2d, 0xff272a2d, 0xff272a2d,
    0xff272a2d, 0xff272a2d, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e,
    0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e,
    0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff272a2e, 0xff282a2e, 0xff282a2e, 0xff282a2e, 0xff282b2e,
    0xff282b2e, 0xff282b2e, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f,
    0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f,
    0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f, 0xff282b2f,
    0xff292b2f, 0xff292c2f, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30,
    0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30,
    0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30, 0xff292c30,
    0xff292c30, 0xff292c30, 0xff292c30, 0xff292c31, 0xff292d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31,
    0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31,
    0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d31,
    0xff2a2d31, 0xff2a2d31, 0xff2a2d31, 0xff2a2d32, 0xff2a2d32, 0xff2a2d32, 0xff2a2e32, 0xff2a2e32,
    0xff2a2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32,
    0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e32,
    0xff2b2e32, 0xff2b2e32, 0xff2b2e32, 0xff2b2e33, 0xff2b2e33, 0xff2b2e33, 0xff2b2e33, 0xff2b2e33,
    0xff2b2f33, 0xff2b2f33, 0xff2b2f33, 0xff2b2f33, 0xff2b2f33, 0xff2b2f33, 0xff2c2f33, 0xff2c2f33,
    0xff2c2f33, 0xff2c2f33, 0xff2c2f33, 0xff2c2f33, 0xff2c2f33, 0xff2c2f33, 0xff2c2f33, 0xff2c2f33,
    0xff2c2f33, 0xff2c2f33, 0xff2c2f33, 0xff2c2f34, 0xff2c2f34, 0xff2c2f34, 0xff2c2f34, 0xff2c2f34,
    0xff2c2f34, 0xff2c2f34, 0xff2c3034, 0xff2c3034, 0xff2c3034, 0xff2c3034, 0xff2c3034, 0xff2c3034,
    0xff2c3034, 0xff2c3034, 0xff2d3034, 0xff2d3034, 0xff2d3034, 0xff2d3034, 0xff2d3034, 0xff2d3034,
    0xff2d3034, 0xff2d3034, 0xff2d3034, 0xff2d3035, 0xff2d3035, 0xff2d3035, 0xff2d3035, 0xff2d3035,
    0xff2d3035, 0xff2d3035, 0xff2d3035, 0xff2d3035, 0xff2d3135, 0xff2d3135, 0xff2d3135, 0xff2d3135,
    0xff2d3135, 0xff2d3135, 0xff2d3135, 0xff2d3135, 0xff2d3135, 0xff2d3135, 0xff2d3135, 0xff2e3135,
    0xff2e3135, 0xff2e3135, 0xff2e3135, 0xff2e3136, 0xff2e3136, 0xff2e3136, 0xff2e3136, 0xff2e3136,
    0xff2e3136, 0xff2e3136, 0xff2e3136, 0xff2e3136, 0xff2e3136, 0xff2e3136, 0xff2e3236, 0xff2e3236,
    0xff2e3236, 0xff2e3236, 0xff2e3236, 0xff2e3236, 0xff2e3236, 0xff2e3236, 0xff2e3236, 0xff2e3236,
    0xff2e3236, 0xff2e3236, 0xff2e3236, 0xff2f3237, 0xff2f3237, 0xff2f3237, 0xff2f3237, 0xff2f3237,
    0xff2f3237, 0xff2f3237, 0xff2f3237, 0xff2f3237, 0xff2f3237, 0xff2f3237, 0xff2f3237, 0xff2f3237,
    0xff2f3337, 0xff2f3337, 0xff2f3337, 0xff2f3337, 0xff2f3337, 0xff2f3337, 0xff2f3337, 0xff2f3337,
    0xff2f3337, 0xff2f3337, 0xff2f3337, 0xff2f3338, 0xff2f3338, 0xff2f3338, 0xff2f3338, 0xff303338,
    0xff303338, 0xff303338, 0xff303338, 0xff303338, 0xff303338, 0xff303338, 0xff303338, 0xff303338,
    0xff303338, 0xff303338, 0xff303438, 0xff303438, 0xff303438, 0xff303438, 0xff303438, 0xff303438,
    0xff303438, 0xff303438, 0xff303438, 0xff303439, 0xff303439, 0xff303439, 0xff303439, 0xff303439,
    0xff303439, 0xff303439, 0xff303439, 0xff303439, 0xff313439, 0xff313439, 0xff313439, 0xff313439,
    0xff313439, 0xff313439, 0xff313439, 0xff313439, 0xff313539, 0xff313539, 0xff313539, 0xff313539,
    0xff313539, 0xff313539, 0xff313539, 0xff31353a, 0xff31353a, 0xff31353a, 0xff31353a, 0xff31353a,
    0xff31353a, 0xff31353a, 0xff31353a, 0xff31353a, 0xff31353a, 0xff31353a, 0xff31353a, 0xff31353a,
    0xff32353a, 0xff32353a, 0xff32353a, 0xff32353a, 0xff32353a, 0xff32353a, 0xff32363a, 0xff32363a,
    0xff32363a, 0xff32363a, 0xff32363a, 0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b,
    0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b,
    0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b, 0xff32363b, 0xff33363b, 0xff33363b, 0xff33363b,
    0xff33373b, 0xff33373b, 0xff33373b, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c,
    0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c,
    0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c, 0xff33373c,
    0xff33373c, 0xff34373c, 0xff34383c, 0xff34383d, 0xff34383d, 0xff34383d, 0xff34383d, 0xff34383d,
    0xff34383d, 0xff34383d, 0xff34383d, 0xff34383d, 0xff34383d, 0xff34383d, 0xff34383d, 0xff34383d
};
#endif // SIMULATOR

const float linear_gradient_menu_banner_linear_gradient_stop_positions[] = {
    0.0000f, 0.1460f, 0.3890f, 1.0000f
};

const uint32_t linear_gradient_menu_banner_linear_gradient_stop_colors[] = {
    0xff313437, 0xff26282a, 0xff1e2023, 0xff34383d
};

static const VGLinearGradient svg_menu_banner_shape_0_fill = {
#ifdef SIMULATOR
    linear_gradient_menu_banner_linear_gradient_palette,
#else
    0, // Palette
#endif
    4, // Number of stops
    linear_gradient_menu_banner_linear_gradient_stop_positions,
    linear_gradient_menu_banner_linear_gradient_stop_colors,
    0.0000f, 451.0530f, 52.3031f, 451.0530f, // Start and end point
    true // Is solid
};

static const VGShape svg_menu_banner_shape_0 = {
    5, 5,                                                        // numCommands, numPoints
    svg_menu_banner_shape_0_commands,                            // commands
    svg_menu_banner_shape_0_points,                              // points
    VG_FILL_NON_ZERO,                                            // drawingMode
    VG_LINEAR_GRADIENT,                                          // fillMode
    VG_NONE,                                                     // strokeMode
    &svg_menu_banner_shape_0_fill,                               // fillPaint
    0,                                                           // strokePaint
    0.0000f,                                                     // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                    // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                      // strokeLineCap
    4.0000,                                                      // strokeMiterLimit
    255,                                                         // fillAlpha
    255,                                                         // strokeAlpha
    { 0.0000f, 315.0530f, 58.0500f, 587.0530f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, -315.0530f }, // transformation[6]
    0                                                            // next
};

static const touchgfx::VGObject svg_database[] = {
    { 0.0000f, 0.0000f, 480.0000f, 272.0000f, 480.0000f, 272.0000f, &svg_base_shape_0 },
    { -0.0000f, -0.0040f, 35.0000f, 31.9990f, 35.0000f, 32.0000f, &svg_diagnostic_icon_shape_0 },
    { 0.0000f, 0.0000f, 59.0000f, 53.0000f, 59.0000f, 53.0000f, &svg_group_93_shape_0 },
    { -0.0000f, -0.0000f, 2.0000f, 272.0000f, 2.0000f, 272.0000f, &svg_left_upper_wing_shape_0 },
    { 0.0000f, -0.0000f, 419.9500f, 2.0000f, 419.9500f, 2.0000f, &svg_left_upper_wing_1_shape_0 },
    { 0.0000f, -0.0000f, 58.0500f, 272.0000f, 58.0500f, 272.0000f, &svg_menu_banner_shape_0 }
};

namespace SVGDatabase
{
const touchgfx::VGObject* getInstance()
{
    return svg_database;
}

uint16_t getInstanceSize()
{
    return 6;
}
} // namespace SVGDatabase
