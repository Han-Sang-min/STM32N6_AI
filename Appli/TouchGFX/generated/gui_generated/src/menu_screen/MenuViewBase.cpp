/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menu_screen/MenuViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include<images/SVGDatabase.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MenuViewBase::MenuViewBase() :
    flexButtonCallback(this, &MenuViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    screen_space.setPosition(160, 104, 480, 272);
    base.setSVG(SVG_BASE_ID);
    base.setPosition(1, 0, 480, 272);
    base.setScale(1.0f, 0.99f);
    base.setImagePosition(0, 0);
    base.setRotationCenter(0, 0);
    base.setRotation(0.0f);
    screen_space.add(base);

    menu_banner_container.setPosition(0, 0, 58, 272);
    menu_banner.setSVG(SVG_MENU_BANNER_ID);
    menu_banner.setPosition(0, 0, 58, 272);
    menu_banner.setScale(0.97f, 1.0f);
    menu_banner.setImagePosition(0, 0);
    menu_banner.setRotationCenter(0, 0);
    menu_banner.setRotation(0.0f);
    menu_banner_container.add(menu_banner);

    setting_icon_2.setSVG(SVG_DIAGNOSTIC_ICON_ID);
    setting_icon_2.setPosition(13, 212, 33, 33);
    setting_icon_2.setScale(0.89f, 1.0f);
    setting_icon_2.setImagePosition(0, 0);
    setting_icon_2.setRotationCenter(0, 0);
    setting_icon_2.setRotation(0.0f);
    menu_banner_container.add(setting_icon_2);

    screen_space.add(menu_banner_container);

    left_upper_wing.setSVG(SVG_LEFT_UPPER_WING_1_ID);
    left_upper_wing.setPosition(60, 45, 420, 3);
    left_upper_wing.setScale(1.0f, 0.75f);
    left_upper_wing.setImagePosition(0, 0);
    left_upper_wing.setRotationCenter(0, 0);
    left_upper_wing.setRotation(0.0f);
    screen_space.add(left_upper_wing);

    add(screen_space);

    Light_Bar_container_1_1.setPosition(376, 228, 248, 58);
    adj_left_button_1.setBitmaps(Bitmap(BITMAP_GROUP_292_ID), Bitmap(BITMAP_GROUP_292_ID));
    adj_left_button_1.setBitmapXY(0, 0);
    adj_left_button_1.setAction(flexButtonCallback);
    adj_left_button_1.setPosition(0, 0, 20, 53);
    Light_Bar_container_1_1.add(adj_left_button_1);

    adj_right_button_1.setBitmaps(Bitmap(BITMAP_GROUP293_ID), Bitmap(BITMAP_GROUP293_ID));
    adj_right_button_1.setBitmapXY(0, 0);
    adj_right_button_1.setAction(flexButtonCallback);
    adj_right_button_1.setPosition(225, 0, 20, 53);
    Light_Bar_container_1_1.add(adj_right_button_1);

    lightProgressContainer1.setXY(25, 2);
    Light_Bar_container_1_1.add(lightProgressContainer1);

    add(Light_Bar_container_1_1);

    Light_Bar_container_1_1_1.setPosition(376, 161, 248, 58);
    adj_left_button_0.setBitmaps(Bitmap(BITMAP_GROUP_292_ID), Bitmap(BITMAP_GROUP_292_ID));
    adj_left_button_0.setBitmapXY(0, 0);
    adj_left_button_0.setAction(flexButtonCallback);
    adj_left_button_0.setPosition(0, 0, 20, 53);
    Light_Bar_container_1_1_1.add(adj_left_button_0);

    adj_right_button_0.setBitmaps(Bitmap(BITMAP_GROUP293_ID), Bitmap(BITMAP_GROUP293_ID));
    adj_right_button_0.setBitmapXY(0, 0);
    adj_right_button_0.setAction(flexButtonCallback);
    adj_right_button_0.setPosition(225, 0, 20, 53);
    Light_Bar_container_1_1_1.add(adj_right_button_0);

    lightProgressContainer0.setXY(25, 2);
    Light_Bar_container_1_1_1.add(lightProgressContainer0);

    add(Light_Bar_container_1_1_1);

    container2.setPosition(376, 296, 107, 53);
    SVGImage7.setSVG(SVG_GROUP_93_ID);
    SVGImage7.setPosition(24, 0, 59, 53);
    SVGImage7.setScale(1.0f, 1.0f);
    SVGImage7.setImagePosition(0, 0);
    SVGImage7.setRotationCenter(0, 0);
    SVGImage7.setRotation(0.0f);
    container2.add(SVGImage7);

    st_daytime.setPosition(25, 10, 59, 43);
    st_daytime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    st_daytime.setLinespacing(0);
    Unicode::snprintf(st_daytimeBuffer, ST_DAYTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RZO4).getText());
    st_daytime.setWildcard(st_daytimeBuffer);
    st_daytime.setTypedText(touchgfx::TypedText(T_NUMBERTEXT));
    container2.add(st_daytime);

    adj_left_button_2.setBitmaps(Bitmap(BITMAP_GROUP_292_ID), Bitmap(BITMAP_GROUP_292_ID));
    adj_left_button_2.setBitmapXY(0, 0);
    adj_left_button_2.setAction(flexButtonCallback);
    adj_left_button_2.setPosition(0, 0, 20, 53);
    container2.add(adj_left_button_2);

    adj_right_button_2.setBitmaps(Bitmap(BITMAP_GROUP293_ID), Bitmap(BITMAP_GROUP293_ID));
    adj_right_button_2.setBitmapXY(0, 0);
    adj_right_button_2.setAction(flexButtonCallback);
    adj_right_button_2.setPosition(87, 0, 20, 53);
    container2.add(adj_right_button_2);

    add(container2);

    container2_1.setPosition(514, 296, 107, 53);
    SVGImage7_1.setSVG(SVG_GROUP_93_ID);
    SVGImage7_1.setPosition(24, 0, 59, 53);
    SVGImage7_1.setScale(1.0f, 1.0f);
    SVGImage7_1.setImagePosition(0, 0);
    SVGImage7_1.setRotationCenter(0, 0);
    SVGImage7_1.setRotation(0.0f);
    container2_1.add(SVGImage7_1);

    end_daytime.setPosition(24, 10, 58, 28);
    end_daytime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    end_daytime.setLinespacing(0);
    Unicode::snprintf(end_daytimeBuffer, END_DAYTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HO6M).getText());
    end_daytime.setWildcard(end_daytimeBuffer);
    end_daytime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TS6B));
    container2_1.add(end_daytime);

    adj_left_button_3.setBitmaps(Bitmap(BITMAP_GROUP_292_ID), Bitmap(BITMAP_GROUP_292_ID));
    adj_left_button_3.setBitmapXY(0, 0);
    adj_left_button_3.setAction(flexButtonCallback);
    adj_left_button_3.setPosition(0, 0, 20, 53);
    container2_1.add(adj_left_button_3);

    adj_right_button_3.setBitmaps(Bitmap(BITMAP_GROUP293_ID), Bitmap(BITMAP_GROUP293_ID));
    adj_right_button_3.setBitmapXY(0, 0);
    adj_right_button_3.setAction(flexButtonCallback);
    adj_right_button_3.setPosition(87, 0, 20, 53);
    container2_1.add(adj_right_button_3);

    add(container2_1);

    Image2.setXY(242, 176);
    Image2.setBitmap(touchgfx::Bitmap(BITMAP_DAYTIME_ID));
    add(Image2);

    Image3.setXY(242, 309);
    Image3.setBitmap(touchgfx::Bitmap(BITMAP_DAYTIME_TIME_ID));
    add(Image3);

    Image4.setXY(333, 111);
    Image4.setBitmap(touchgfx::Bitmap(BITMAP_LCD_BRIGHTNESS_ADJUSTMENT_ID));
    add(Image4);

    Image5.setXY(242, 240);
    Image5.setBitmap(touchgfx::Bitmap(BITMAP_NIGHTTIME_ID));
    add(Image5);

    Image6.setXY(159, 179);
    Image6.setBitmap(touchgfx::Bitmap(BITMAP_PASS_180_ID));
    add(Image6);

    Image6_1.setXY(159, 285);
    Image6_1.setBitmap(touchgfx::Bitmap(BITMAP_PASS_180_ID));
    add(Image6_1);

    Image7.setXY(171, 224);
    Image7.setBitmap(touchgfx::Bitmap(BITMAP_SPANNER_HAMMER_ICON_ID));
    add(Image7);

    Image8.setXY(486, 318);
    Image8.setBitmap(touchgfx::Bitmap(BITMAP_PASS_2770_ID));
    add(Image8);

    Image9.setXY(173, 131);
    Image9.setBitmap(touchgfx::Bitmap(BITMAP_SETTING_ICON_ID));
    add(Image9);
}

MenuViewBase::~MenuViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MenuViewBase::setupScreen()
{
    lightProgressContainer1.initialize();
    lightProgressContainer0.initialize();
}

void MenuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &adj_left_button_0)
    {
        //daytime_left_button
        //When adj_left_button_0 clicked execute C++ code
        //Execute C++ code
        lightProgressContainer0.hideLastLight();
    }
    if (&src == &adj_right_button_0)
    {
        //daytime_right_button
        //When adj_right_button_0 clicked execute C++ code
        //Execute C++ code
        lightProgressContainer0.showNextLight();
    }
    if (&src == &adj_left_button_2)
    {
        //st_daytime_left
        //When adj_left_button_2 clicked call virtual function
        //Call stDaytimeLeftPressed
        stDaytimeLeftPressed();
    }
    if (&src == &adj_right_button_2)
    {
        //st_daytime_right
        //When adj_right_button_2 clicked call virtual function
        //Call stDaytimeRightPressed
        stDaytimeRightPressed();
    }
    if (&src == &adj_right_button_3)
    {
        //end_daytime_right
        //When adj_right_button_3 clicked call virtual function
        //Call endDaytimeRightPressed
        endDaytimeRightPressed();
    }
    if (&src == &adj_left_button_3)
    {
        //end_daytime_left
        //When adj_left_button_3 clicked call virtual function
        //Call endDaytimeLeftPressed
        endDaytimeLeftPressed();
    }
    if (&src == &adj_right_button_1)
    {
        //nighttime_right_button
        //When adj_right_button_1 clicked execute C++ code
        //Execute C++ code
        lightProgressContainer1.showNextLight();
    }
    if (&src == &adj_left_button_1)
    {
        //nighttime_left_button
        //When adj_left_button_1 clicked execute C++ code
        //Execute C++ code
        lightProgressContainer1.hideLastLight();
    }
}

void MenuViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
    {
        //GoTo_Camera
        //When hardware button 1 clicked change screen to Camera
        //Go to Camera with no screen transition
        application().gotoCameraScreenNoTransition();
    
    }

    if(2 == key)
    {
        //GoTo_Main
        //When hardware button 2 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    
    }
}
