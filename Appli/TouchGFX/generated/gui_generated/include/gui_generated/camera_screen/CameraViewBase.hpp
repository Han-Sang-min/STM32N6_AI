/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CAMERAVIEWBASE_HPP
#define CAMERAVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/camera_screen/CameraPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class CameraViewBase : public touchgfx::View<CameraPresenter>
{
public:
    CameraViewBase();
    virtual ~CameraViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image cameraScreen;
    touchgfx::Image aiScreen;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::TextAreaWithOneWildcard FPStext;

    /*
     * Wildcard Buffers
     */
    static const uint16_t FPSTEXT_SIZE = 20;
    touchgfx::Unicode::UnicodeChar FPStextBuffer[FPSTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CameraViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CAMERAVIEWBASE_HPP
